!function(f){"object"==typeof exports&&"undefined"!=typeof module?module.exports=f():"function"==typeof define&&define.amd?define([],f):("undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this).charttable=f()}(function(){return function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var p="function"==typeof require&&require;if(!f&&p)return p(i,!0);if(u)return u(i,!0);throw(p=new Error("Cannot find module '"+i+"'")).code="MODULE_NOT_FOUND",p}p=n[i]={exports:{}},e[i][0].call(p.exports,function(r){return o(e[i][1][r]||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}({1:[function(require,module,exports){exports.table=function(){var gEle=null,gData=null,gCategoryName=null,gSelectedCol={},gSelectedRow={},gColorMap={},gColors=null,gMinSelectedRow2Show=null,gMinSelectedCol2Show=null,gOnSelect=null;function prepareSelectedData(){if(!(Object.keys(gSelectedCol).length==gMinSelectedCol2Show&&Object.keys(gSelectedRow).length>=gMinSelectedRow2Show))return{};var selectedDataSet=[];Object.entries(gData).forEach(function(key,value){value in gSelectedRow&&selectedDataSet.push(gData[value])});for(var selectedColumnNames=[],i=0;i<gMinSelectedCol2Show;i++)selectedColumnNames.push(Object.keys(gSelectedCol)[i]);return{selectedRows:selectedDataSet,selectedColumns:selectedColumnNames,selectedColorMap:gColorMap,categoryName:gCategoryName}}function toggleTrainingDataSet(selected,id){("th"==selected.tagName.toLowerCase()?function(id){id in gSelectedCol?delete gSelectedCol[id]:gSelectedCol[id]=""}:function(id){id in gSelectedRow?delete gSelectedRow[id]:gSelectedRow[id]=""})(id)}function generateSvgBars(chunks,w,h,groups,maxCount,xBase,yBase){var svg=document.createElement("svg"),g=document.createElement("g");svg.setAttribute("class","customChart"),svg.setAttribute("width",w),svg.setAttribute("height",h),svg.setAttribute("style",`fill: ${gColors[0]}`);for(var width=(w-20)/groups,idx=0;idx<chunks.length;idx++){var rect=chunks[idx],height=h*rect.data.length/maxCount;const x=10+width*idx,y=h-height,content=`<b>${rect.lo}-${rect.hi}</b><br>count: <b>${rect.data.length}</b>`;rect=document.createElement("rect");rect.setAttribute("class","bar"),rect.setAttribute("x",x),rect.setAttribute("width",width),rect.setAttribute("y",y),rect.setAttribute("height",height),rect.addEventListener("mousemove",function(){!function(x,y,content){document.querySelector(".tooltiptext").style.top=`${y}px`,document.querySelector(".tooltiptext").style.left=`${x}px`,document.querySelector(".tooltiptext").innerHTML=content}(xBase+x,y-10+yBase,content)}),rect.addEventListener("mouseover",function(){document.querySelector(".tooltiptext").style.visibility="visible"}),rect.addEventListener("mouseout",function(){document.querySelector(".tooltiptext").style.visibility="hidden"}),g.appendChild(rect)}return svg.appendChild(g),svg}function createSvgBarChart(title,divTitle,groups,cid){var divBarChart=divTitle.map(x=>x[title]),minVal=Math.min(...divBarChart),maxVal=Math.max(...divBarChart);const chunks=function(row,maxVal,minVal,groups){const range=(maxVal-minVal)/groups;for(var res=[],i=0;i<groups;i++)res.push({data:row.filter(function(x){return 0==i?x>=minVal+i*range&&x<=minVal+(i+1)*range:x>minVal+i*range&&x<=minVal+(i+1)*range}),lo:Math.round(100*(minVal+i*range))/100,hi:Math.round(100*(minVal+(i+1)*range))/100});return res}(divBarChart,maxVal,minVal,groups);var maxCount=Math.max(...chunks.map(x=>x.data.length)),element=document.getElementsByClassName("tableFixHead")[0].offsetTop,container=document.createElement("div"),divTitle=document.createElement("div");divTitle.innerHTML=`<div><b>${title}</b></div>`;divBarChart=document.createElement("div");divBarChart.appendChild(generateSvgBars(chunks,200,200,groups,maxCount,200*cid,element));element=document.createElement("div");return element.innerHTML=`
      <div>
        <div style="float: left;">${minVal}</div>
        <div style="float: right;">${maxVal}</div>
      </div>`,container.appendChild(divTitle),container.appendChild(divBarChart),container.appendChild(element),element=container,(container=document.createElement("div")).appendChild(element.cloneNode(!0)),container.innerHTML}function createSvgPieChart(title,chunks){const row=chunks.map(x=>x[title]);chunks=row.reduce((total,curr)=>(total.hasOwnProperty(curr)||(total[curr]=[]),total[curr].push(curr),total),{});return`<div><b>${title}</b></div>
      <div>${function(chunks,w,h,total){var html=`<svg class="customChart" width="${w}" height="${h}" viewBox="0 0 32 32"><g>`,currCount=0,i=0;return html+='<circle r="16" cx="16" cy="16" style="fill:gray;" />',Object.entries(chunks).forEach(([key,item])=>{dasharrayValue=(total-currCount)/parseFloat(total)*100,html+=`<circle r="8" cx="16" cy="16" style="stroke:${gColors[i]};stroke-dasharray:calc(${dasharrayValue} * 31.42px / 62.5) ${dasharrayValue+20}px" class="pieChartCircle"></circle>`,gColorMap[key]=gColors[i],i+=1,currCount+=item.length}),html+="</g></svg>"}(chunks,200,200,row.length)}</div>`}function createElementHelper(tagName,content,id=null){var tag=document.createElement(tagName);return tag.innerHTML=content,null!=id&&tag.addEventListener("click",function(){selectMe(tag,id)}),tag}function emptyChild(ele){for(;ele.firstChild;)ele.removeChild(ele.firstChild)}function resetTbl(){gCategoryName=gData=null,gSelectedCol={},gSelectedRow={},gColorMap={},gEle.replaceChildren(),gEle.innerHTML=`
      <span class="tooltiptext">Tooltip text</span>
      <div class="tableFixHead" style="height: ${gHeight}px;">
        <table>
          <thead>
          </thead>
          <tbody>
          </tbody>
        </table>
      </div>`}let publicScope={};function selectMe(selected,id){selected.classList.contains("trainingdata")?(selected.classList.remove("trainingdata"),toggleTrainingDataSet(selected,id)):function(selected){return"th"!=selected.tagName.toLowerCase()||Object.keys(gSelectedCol).length!=gMinSelectedCol2Show}(selected)&&(selected.classList.add("trainingdata"),toggleTrainingDataSet(selected,id)),gOnSelect&&gOnSelect(prepareSelectedData())}return publicScope.initTbl=function(ele,options){options=function(a,b){for(var key in b)b.hasOwnProperty(key)&&(a[key]=b[key]);return a}({columnTypes:[],colors:["#FFB000","#DC267F","#648FFB","#785EF0"],minSelectedRow2Show:3,minSelectedCol2Show:2,height:360,onSelect:null},options),options.columnTypes,gColors=options.colors,gMinSelectedRow2Show=options.minSelectedRow2Show,gMinSelectedCol2Show=options.minSelectedCol2Show,gOnSelect=options.onSelect,gHeight=options.height,gEle=ele,resetTbl()},publicScope.showDataset=function(data){resetTbl(),gData=data;var thead=document.querySelector(".tableFixHead > table > thead");emptyChild(thead);const numberOfColumns=Object.keys(data[0]).length;var i=0,tr=document.createElement("tr");Object.entries(data[0]).forEach(([key,value])=>{i==numberOfColumns-1?(gCategoryName=key,tr.append(createElementHelper("th",createSvgPieChart(key,data)))):isNaN(value)?tr.append(createElementHelper("th",createSvgPieChart(key,data),key)):tr.append(createElementHelper("th",createSvgBarChart(key,data,10,i),key)),i++}),thead.append(tr);var tbody=document.querySelector(".tableFixHead > table > tbody");emptyChild(tbody),Object.entries(data).forEach(([key,item])=>{var tr=document.createElement("tr");tr.addEventListener("click",function(){selectMe(tr,key)}),Object.entries(item).forEach(([,value])=>{tr.append(createElementHelper("td",value))}),tbody.append(tr)})},publicScope}},{}]},{},[1])(1)});
